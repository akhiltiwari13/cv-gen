# Akhil Tiwari

**HFT & Trading Systems Engineer | C++ Expert | Low-Latency Architect**  
Bengaluru, India  
ðŸ“§ <akhiltiwari.13@gmail.com> | ðŸ“ž +91 8959815625  
[GitHub](https://github.com/akhiltiwari13) | [LinkedIn](https://www.linkedin.com/in/akhiltiwari-13/)


## ðŸ§  Summary

Experienced software engineer with deep expertise in high-frequency trading (HFT) infrastructures, low-latency execution platforms, and real-time trading systems. Over 10 years of experience designing and optimizing ultra-low latency systems in C++. Specialized in messaging systems, tick-to-order pipelines, exchange gateways, and infrastructure benchmarking tools. Strong contributor to institutional-grade platforms.


## ðŸ’¼ Experience

### **Lead Platform Engineer** â€” AlgoQuant, Bengaluru

**Oct 2024 â€“ Apr 2025**

- Built a real-time, event-driven trading platform to send IOC orders to NSE with OMS, RMS, and exchange connectivity â€” achieving sub-microsecond tick-to-order latency.
- Refactored monolithic repository into modular packages using modern build tooling and Conan 2.0.
- Enhanced observability via Tracy-based instrumentation profiling.

> **Primary toolchain:** C++20, GCC 13.1, CMake, Conan 2.0, Docker, Arch Linux

### **Senior Trading Systems Engineer** â€” Gemini, Gurugram

**Dec 2023 â€“ Aug 2024**

- Migrated core services from Scala to C++ for match engine and ledger.
- Developed Kafka-based logging pipeline using modern C++ wrappers (librdkafka++)
- Built UM-based microservices for internal trade admin tooling.

> **Primary toolchain:** C++17, Clang, Bazel, Kafka, Docker

### **Senior Developer for Execution Platforms** â€” Morgan Stanley, Bengaluru

**Jun 2021 â€“ Oct 2023**

- Engineered smart order routers for Bovespa, BMV, and TSX with ~27Î¼s median latency.
- Developed Beneficiary Ownership Check (BOC) logic to detect wash trades.
- Created comprehensive test frameworks using Python & Testplan.

> **Primary toolchain:** C++14, GCC, Bazel, Premake, RHEL

### **Manager** â€” Edelweiss, Mumbai

**May 2019 â€“ Jun 2021**

- Maintained in-house DMA trading platform with ~200ns latency.
- Built a .pcap-based latency profiler using libpcap++.
- Developed institutional-grade RMS dashboards with live trading limits.
- Built MCX adapter with new encryption specs.

> **Primary toolchain:** C++14, Premake/Bazel, RHEL

### **Senior Research Analyst** â€” Deqode, Pune

**May 2018 â€“ May 2019**

- Designed Blaze Protocol â€” 16k TPS distributed ledger in C++.
- Worked on BitShares fork for tokenomics + EOS smart contracts.

### **Senior Software Engineer** â€” Barclays, Pune

**Jun 2015 â€“ May 2018**

- Built backend Java APIs and C# UI (CCD) for trading support desks.
- Awarded for reducing UI latency by 15% in large desktop apps.


## ðŸ§° Technical Skills

**Languages:** C++, Python, Bash, Java

**Toolchains:** GCC, Clang, CMake, Bazel, Conan, Premake

**Latency/Testing:** libpcap++, Tracy, GDB, Valgrind, Testplan, UM, Kafka

**Monitoring:** Datadog, PagerDuty, Sentry

**CI/CD:** Jenkins, GitHub, Docker

**Cloud/Infra:** Hashicorp Vault, Nomad, S3, PostgreSQL


## ðŸ“œ Certifications

- **OpenShift Enterprise Development** â€” _Issued Dec 2017_
- **Appian 7.11 Designer 201** â€” _Issued Nov 2015_


_Optimized for C++ development, low-latency systems, exchange connectivity, and infrastructure design._
